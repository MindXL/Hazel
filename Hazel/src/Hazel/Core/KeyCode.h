#pragma once

// From glfw3.h
constexpr int HZ_KEY_SPACE = 32;
constexpr int HZ_KEY_APOSTROPHE = 39; /* ' */
constexpr int HZ_KEY_COMMA = 44; /* , */
constexpr int HZ_KEY_MINUS = 45; /* - */
constexpr int HZ_KEY_PERIOD = 46; /* . */
constexpr int HZ_KEY_SLASH = 47; /* / */
constexpr int HZ_KEY_0 = 48;
constexpr int HZ_KEY_1 = 49;
constexpr int HZ_KEY_2 = 50;
constexpr int HZ_KEY_3 = 51;
constexpr int HZ_KEY_4 = 52;
constexpr int HZ_KEY_5 = 53;
constexpr int HZ_KEY_6 = 54;
constexpr int HZ_KEY_7 = 55;
constexpr int HZ_KEY_8 = 56;
constexpr int HZ_KEY_9 = 57;
constexpr int HZ_KEY_SEMICOLON = 59; /* ; */
constexpr int HZ_KEY_EQUAL = 61; /* = */
constexpr int HZ_KEY_A = 65;
constexpr int HZ_KEY_B = 66;
constexpr int HZ_KEY_C = 67;
constexpr int HZ_KEY_D = 68;
constexpr int HZ_KEY_E = 69;
constexpr int HZ_KEY_F = 70;
constexpr int HZ_KEY_G = 71;
constexpr int HZ_KEY_H = 72;
constexpr int HZ_KEY_I = 73;
constexpr int HZ_KEY_J = 74;
constexpr int HZ_KEY_K = 75;
constexpr int HZ_KEY_L = 76;
constexpr int HZ_KEY_M = 77;
constexpr int HZ_KEY_N = 78;
constexpr int HZ_KEY_O = 79;
constexpr int HZ_KEY_P = 80;
constexpr int HZ_KEY_Q = 81;
constexpr int HZ_KEY_R = 82;
constexpr int HZ_KEY_S = 83;
constexpr int HZ_KEY_T = 84;
constexpr int HZ_KEY_U = 85;
constexpr int HZ_KEY_V = 86;
constexpr int HZ_KEY_W = 87;
constexpr int HZ_KEY_X = 88;
constexpr int HZ_KEY_Y = 89;
constexpr int HZ_KEY_Z = 90;
constexpr int HZ_KEY_LEFT_BRACKET = 91; /* [ */
constexpr int HZ_KEY_BACKSLASH = 92; /* \ */
constexpr int HZ_KEY_RIGHT_BRACKET = 93; /* ] */
constexpr int HZ_KEY_GRAVE_ACCENT = 96; /* ` */
constexpr int HZ_KEY_WORLD_1 = 161; /* non-US #1 */
constexpr int HZ_KEY_WORLD_2 = 162; /* non-US #2 */

/* Function keys */
constexpr int HZ_KEY_ESCAPE = 256;
constexpr int HZ_KEY_ENTER = 257;
constexpr int HZ_KEY_TAB = 258;
constexpr int HZ_KEY_BACKSPACE = 259;
constexpr int HZ_KEY_INSERT = 260;
constexpr int HZ_KEY_DELETE = 261;
constexpr int HZ_KEY_RIGHT = 262;
constexpr int HZ_KEY_LEFT = 263;
constexpr int HZ_KEY_DOWN = 264;
constexpr int HZ_KEY_UP = 265;
constexpr int HZ_KEY_PAGE_UP = 266;
constexpr int HZ_KEY_PAGE_DOWN = 267;
constexpr int HZ_KEY_HOME = 268;
constexpr int HZ_KEY_END = 269;
constexpr int HZ_KEY_CAPS_LOCK = 280;
constexpr int HZ_KEY_SCROLL_LOCK = 281;
constexpr int HZ_KEY_NUM_LOCK = 282;
constexpr int HZ_KEY_PRINT_SCREEN = 283;
constexpr int HZ_KEY_PAUSE = 284;
constexpr int HZ_KEY_F1 = 290;
constexpr int HZ_KEY_F2 = 291;
constexpr int HZ_KEY_F3 = 292;
constexpr int HZ_KEY_F4 = 293;
constexpr int HZ_KEY_F5 = 294;
constexpr int HZ_KEY_F6 = 295;
constexpr int HZ_KEY_F7 = 296;
constexpr int HZ_KEY_F8 = 297;
constexpr int HZ_KEY_F9 = 298;
constexpr int HZ_KEY_F10 = 299;
constexpr int HZ_KEY_F11 = 300;
constexpr int HZ_KEY_F12 = 301;
constexpr int HZ_KEY_F13 = 302;
constexpr int HZ_KEY_F14 = 303;
constexpr int HZ_KEY_F15 = 304;
constexpr int HZ_KEY_F16 = 305;
constexpr int HZ_KEY_F17 = 306;
constexpr int HZ_KEY_F18 = 307;
constexpr int HZ_KEY_F19 = 308;
constexpr int HZ_KEY_F20 = 309;
constexpr int HZ_KEY_F21 = 310;
constexpr int HZ_KEY_F22 = 311;
constexpr int HZ_KEY_F23 = 312;
constexpr int HZ_KEY_F24 = 313;
constexpr int HZ_KEY_F25 = 314;
constexpr int HZ_KEY_KP_0 = 320;
constexpr int HZ_KEY_KP_1 = 321;
constexpr int HZ_KEY_KP_2 = 322;
constexpr int HZ_KEY_KP_3 = 323;
constexpr int HZ_KEY_KP_4 = 324;
constexpr int HZ_KEY_KP_5 = 325;
constexpr int HZ_KEY_KP_6 = 326;
constexpr int HZ_KEY_KP_7 = 327;
constexpr int HZ_KEY_KP_8 = 328;
constexpr int HZ_KEY_KP_9 = 329;
constexpr int HZ_KEY_KP_DECIMAL = 330;
constexpr int HZ_KEY_KP_DIVIDE = 331;
constexpr int HZ_KEY_KP_MULTIPLY = 332;
constexpr int HZ_KEY_KP_SUBTRACT = 333;
constexpr int HZ_KEY_KP_ADD = 334;
constexpr int HZ_KEY_KP_ENTER = 335;
constexpr int HZ_KEY_KP_EQUAL = 336;
constexpr int HZ_KEY_LEFT_SHIFT = 340;
constexpr int HZ_KEY_LEFT_CONTROL = 341;
constexpr int HZ_KEY_LEFT_ALT = 342;
constexpr int HZ_KEY_LEFT_SUPER = 343;
constexpr int HZ_KEY_RIGHT_SHIFT = 344;
constexpr int HZ_KEY_RIGHT_CONTROL = 345;
constexpr int HZ_KEY_RIGHT_ALT = 346;
constexpr int HZ_KEY_RIGHT_SUPER = 347;
constexpr int HZ_KEY_MENU = 348;

//#include <iostream>
//
//namespace Hazel
//{
//	typedef enum class KeyCode :int
//	{
//		// From glfw3.h
//		Space = 32,
//		Apostrophe = 39,  /* ' */
//		Comma = 44,  /* , */
//		Minus = 45,  /* - */
//		Period = 46,  /* . */
//		Slash = 47,  /* / */
//		D0 = 48,
//		D1 = 49,
//		D2 = 50,
//		D3 = 51,
//		D4 = 52,
//		D5 = 53,
//		D6 = 54,
//		D7 = 55,
//		D8 = 56,
//		D9 = 57,
//		Semicolon = 59,  /* ; */
//		Equal = 61,  /* = */
//		A = 65,
//		B = 66,
//		C = 67,
//		D = 68,
//		E = 69,
//		F = 70,
//		G = 71,
//		H = 72,
//		I = 73,
//		J = 74,
//		K = 75,
//		L = 76,
//		M = 77,
//		N = 78,
//		O = 79,
//		P = 80,
//		Q = 81,
//		R = 82,
//		S = 83,
//		T = 84,
//		U = 85,
//		V = 86,
//		W = 87,
//		X = 88,
//		Y = 89,
//		Z = 90,
//		LeftBracket = 91,  /* [ */
//		Backslash = 92,  /* \ */
//		RightBracket = 93,  /* ] */
//		GraveAccent = 96,  /* ` */
//		World1 = 161, /* non-US #1 */
//		World2 = 162, /* non-US #2 */
//
//		/* Function keys */
//		Escape = 256,
//		Enter = 257,
//		Tab = 258,
//		Backspace = 259,
//		Insert = 260,
//		Delete = 261,
//		Right = 262,
//		Left = 263,
//		Down = 264,
//		Up = 265,
//		PageUp = 266,
//		PageDown = 267,
//		Home = 268,
//		End = 269,
//		CapsLock = 280,
//		ScrollLock = 281,
//		NumLock = 282,
//		PrintScreen = 283,
//		Pause = 284,
//		F1 = 290,
//		F2 = 291,
//		F3 = 292,
//		F4 = 293,
//		F5 = 294,
//		F6 = 295,
//		F7 = 296,
//		F8 = 297,
//		F9 = 298,
//		F10 = 299,
//		F11 = 300,
//		F12 = 301,
//		F13 = 302,
//		F14 = 303,
//		F15 = 304,
//		F16 = 305,
//		F17 = 306,
//		F18 = 307,
//		F19 = 308,
//		F20 = 309,
//		F21 = 310,
//		F22 = 311,
//		F23 = 312,
//		F24 = 313,
//		F25 = 314,
//		KP0 = 320,
//		KP1 = 321,
//		KP2 = 322,
//		KP3 = 323,
//		KP4 = 324,
//		KP5 = 325,
//		KP6 = 326,
//		KP7 = 327,
//		KP8 = 328,
//		KP9 = 329,
//		KPDecimal = 330,
//		KPDivide = 331,
//		KPMultiply = 332,
//		KPSubtract = 333,
//		KPAdd = 334,
//		KPEnter = 335,
//		KPEqual = 336,
//		LeftShift = 340,
//		LeftControl = 341,
//		LeftAlt = 342,
//		LeftSuper = 343,
//		RightShift = 344,
//		RightControl = 345,
//		RightAlt = 346,
//		RightSuper = 347,
//		Menu = 348
//	}Key;
//
//	inline std::ostream& operator<<(std::ostream& os, KeyCode keycode)
//	{
//		return os << static_cast<int>(keycode);
//	}
//}
